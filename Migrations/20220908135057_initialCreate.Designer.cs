// <auto-generated />
using System;
using Coodesh.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coodesh.Migrations
{
    [DbContext(typeof(CoodeshDbContext))]
    [Migration("20220908135057_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Coodesh.Models.AccessHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AccessedWhen")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("AccessedWhen")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("WhoId")
                        .HasColumnType("int");

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WhoId");

                    b.HasIndex("WordId");

                    b.ToTable("AccessHistory", (string)null);
                });

            modelBuilder.Entity("Coodesh.Models.FavoriteWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("When")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("When")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("WhoId")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WhoId");

                    b.HasIndex("WordId");

                    b.ToTable("FavoriteWord", (string)null);
                });

            modelBuilder.Entity("Coodesh.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("PasswordHash");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Coodesh.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Word", (string)null);
                });

            modelBuilder.Entity("Coodesh.Models.AccessHistory", b =>
                {
                    b.HasOne("Coodesh.Models.User", "Who")
                        .WithMany("AccessHistories")
                        .HasForeignKey("WhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Access_User");

                    b.HasOne("Coodesh.Models.Word", null)
                        .WithMany("AccessHistories")
                        .HasForeignKey("WordId");

                    b.Navigation("Who");
                });

            modelBuilder.Entity("Coodesh.Models.FavoriteWord", b =>
                {
                    b.HasOne("Coodesh.Models.User", "Who")
                        .WithMany("FavoriteWords")
                        .HasForeignKey("WhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Favorite_User");

                    b.HasOne("Coodesh.Models.Word", "Word")
                        .WithMany("FavoriteWords")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Favorite_Word");

                    b.Navigation("Who");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Coodesh.Models.User", b =>
                {
                    b.Navigation("AccessHistories");

                    b.Navigation("FavoriteWords");
                });

            modelBuilder.Entity("Coodesh.Models.Word", b =>
                {
                    b.Navigation("AccessHistories");

                    b.Navigation("FavoriteWords");
                });
#pragma warning restore 612, 618
        }
    }
}
